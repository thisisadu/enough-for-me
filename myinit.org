* interface tweaks
#+BEGIN_SRC emacs-lisp
;; close startup message
(setq inhibit-startup-message t)
;; close splash screen
(setq inhibit-splash-screen 1)

;; Minimal UI
(scroll-bar-mode -1)
(tool-bar-mode   -1)
(tooltip-mode    -1)
(menu-bar-mode   -1)

#+END_SRC
* evil mode
#+BEGIN_SRC emacs-lisp
;; Vim mode
(use-package evil
  :ensure t
  :config
  (evil-mode 1))
#+END_SRC
* which key
#+BEGIN_SRC emacs-lisp
(use-package which-key
	:ensure t
	:config
	(which-key-mode))
#+END_SRC
* org mode
#+BEGIN_SRC emacs-lisp
(use-package org-bullets
	:ensure t
	:config
	(add-hook 'org-mode-hook (lambda () (org-bullets-mode 1))))
#+END_SRC
* ace windows
#+BEGIN_SRC emacs-lisp
(use-package ace-window
	:ensure t
	:init
	(global-set-key [remap other-window] 'ace-window)
	(custom-set-faces
	'(aw-leading-char-face
	((t (:inherit ace-jump-face-foreground :height 3.0)))))
)
#+END_SRC
* swiper / Ivy / Counsel
#+BEGIN_SRC emacs-lisp
;; it looks like counsel is a requirement for swiper
(use-package counsel
:ensure t
)

(use-package swiper
:ensure try
:config
(progn
(ivy-mode 1)
(setq ivy-use-virtual-buffers t)
(global-set-key "\C-s" 'swiper)
(global-set-key (kbd "C-c C-r") 'ivy-resume)
(global-set-key (kbd "<f6>") 'ivy-resume)
;;(global-set-key (kbd "M-x") 'counsel-M-x)
(global-set-key (kbd "C-x C-f") 'counsel-find-file)
(global-set-key (kbd "<f1> f") 'counsel-describe-function)
(global-set-key (kbd "<f1> v") 'counsel-describe-variable)
(global-set-key (kbd "<f1> l") 'counsel-load-library)
(global-set-key (kbd "<f2> i") 'counsel-info-lookup-symbol)
(global-set-key (kbd "<f2> u") 'counsel-unicode-char)
(global-set-key (kbd "C-c g") 'counsel-git)
(global-set-key (kbd "C-c j") 'counsel-git-grep)
(global-set-key (kbd "C-c k") 'counsel-ag)
(global-set-key (kbd "C-x l") 'counsel-locate)
(global-set-key (kbd "C-S-o") 'counsel-rhythmbox)
(define-key read-expression-map (kbd "C-r") 'counsel-expression-history)
))
#+END_SRC
* Avy
#+BEGIN_SRC emacs-lisp
(use-package avy
:ensure t
:config
(avy-setup-default))
#+END_SRC
* Autocomplete
#+BEGIN_SRC emacs-lisp
(use-package auto-complete
:ensure t
:init
(progn
(ac-config-default)
(global-auto-complete-mode t)
))
#+END_SRC
* Theme
#+BEGIN_SRC emacs-lisp
(load-theme 'leuven t)
#+END_SRC
